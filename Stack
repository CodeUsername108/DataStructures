import java.util.*;
class Stack{
    static final int MAX = 1000;
    int top;
    int arr[] = new int[MAX];
    boolean isEmpty(){
        return (top == -1);
    }
    Stack(){
        top = -1;
    }

    boolean push(int x)
    {
        if (top>=(MAX-1)){
            System.out.println("Stack Overflow");
            return false;
        }
        else {
            arr[++top] = x;
            System.out.println(x + " pushed");
            return true;
        }
    }

    int pop(){
        if(top<0){
            System.out.println("Stack Underflow");
            return 0;
        }
        else{
           int x = arr[top--];
           return x;
        }
    }
}
public class StackExpt{
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        System.out.println("enter number of elements to push:");
        int n = sc.nextInt();
        Stack s = new Stack();
        for(int i=0;i<n;i++){
            System.out.println("enter element number "+(i+1));
            int x = sc.nextInt();
            s.push(x);
        }
        System.out.println("enter 1 to pop and any other digit to exit");
        int y = sc.nextInt();
        if(y==1)
        {
            System.out.println(s.pop() + " Popped from stack");
        }
        else{
            System.out.println("Program exited");
        }
        sc.close();
    }
}
